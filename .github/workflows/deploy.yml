name: Deploy

on:
  push:
    branches:
      - master

jobs:
  test-bitrate:
    if: "(!contains(github.event.commits[0].message, '[skip ci]')) && (!contains(github.event.commits[0].message, '[ci skip]'))"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install ffmpeg 🔧
        run: |
          sudo apt-get update
          sudo apt-get install ffmpeg

      - name: Test for bitrates 👓
        run: yarn test:bitrate

  test-sound:
    if: "(!contains(github.event.commits[0].message, '[skip ci]')) && (!contains(github.event.commits[0].message, '[ci skip]'))"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Test for sound file existence 👓
        run: |
          yarn
          yarn test:sound

  test-files:
    if: "(!contains(github.event.commits[0].message, '[skip ci]')) && (!contains(github.event.commits[0].message, '[ci skip]'))"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Test for sound file format 👓
        run: |
          yarn
          yarn test:files

  build-and-deploy:
    if: "(!contains(github.event.commits[0].message, '[skip ci]')) && (!contains(github.event.commits[0].message, '[ci skip]'))"
    runs-on: ubuntu-latest
    needs:
      - test-files
      - test-sound
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install and Build 🔧
        run: |
          yarn
          gulp

      - name: Install SSH Client 🔑
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_PRODUCTON_KEY }}

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          SSH: true
          BRANCH: gh-pages
          FOLDER: dist
          SINGLE_COMMIT: true
          CLEAN: true

      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_S3_SECRET_ACCESS_KEY }}
          DEPLOY_BUCKET: ${{ secrets.DEPLOY_S3_BUCKET }}
          DEPLOY_ENDPOINT_URL: ${{ secrets.DEPLOY_S3_ENDPOINT_URL }}
          AWS_EC2_METADATA_DISABLED: true
        run: |
          aws s3 sync --endpoint-url="$DEPLOY_ENDPOINT_URL" dist/ s3://$DEPLOY_BUCKET/ --follow-symlinks --delete
